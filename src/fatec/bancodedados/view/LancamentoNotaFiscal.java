/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fatec.bancodedados.view;


import fatec.bancodedados.dao.ClienteDAO;
import fatec.bancodedados.dao.NotaFiscalDAO;
import fatec.bancodedados.dao.ProdutoDAO;
import fatec.bancodedados.model.Cliente;
import fatec.bancodedados.model.NotaFiscal;
import fatec.bancodedados.model.Produto;
import fatec.bancodedados.model.ProdutoNota;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Beatriz Camargo
 */
public class LancamentoNotaFiscal extends javax.swing.JFrame {
    private DefaultTableModel tblClienteModel;
    private DefaultTableModel tblProdutoModel;
    private DefaultListModel<String> listaProdutosModel;
    private DefaultTableModel tblNotasAnterioresModel;

    public LancamentoNotaFiscal() {
        initComponents();
        tblClienteModel = (DefaultTableModel) TBL_Clientes.getModel();
        tblProdutoModel = (DefaultTableModel) TBL_Produtos.getModel();
        listaProdutosModel = new DefaultListModel<>();
        ListaProdutos.setModel(listaProdutosModel);
        tblNotasAnterioresModel = (DefaultTableModel) TBL_NotasAnteriores.getModel();
        
        carregarProdutos();
        carregarClientes();
        carregarNotasFiscais();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TBL_Produtos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBL_Clientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        NomeUsuarioLabel = new javax.swing.JLabel();
        CodClienteInput = new javax.swing.JTextField();
        SelecionarClienteBotao = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaProdutos = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        SelecionarProdutoBotao = new javax.swing.JButton();
        NovaNotaBotao = new javax.swing.JButton();
        LimparButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TBL_NotasAnteriores = new javax.swing.JTable();
        VerdetalhesBotao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Notas Fiscais");

        TBL_Produtos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Preco", "Descricao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBL_Produtos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TBL_Produtos);
        if (TBL_Produtos.getColumnModel().getColumnCount() > 0) {
            TBL_Produtos.getColumnModel().getColumn(0).setResizable(false);
            TBL_Produtos.getColumnModel().getColumn(1).setResizable(false);
            TBL_Produtos.getColumnModel().getColumn(2).setResizable(false);
            TBL_Produtos.getColumnModel().getColumn(3).setResizable(false);
        }

        TBL_Clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Email", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBL_Clientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TBL_Clientes);
        if (TBL_Clientes.getColumnModel().getColumnCount() > 0) {
            TBL_Clientes.getColumnModel().getColumn(0).setResizable(false);
            TBL_Clientes.getColumnModel().getColumn(1).setResizable(false);
            TBL_Clientes.getColumnModel().getColumn(2).setResizable(false);
            TBL_Clientes.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Notas Fiscais");

        NomeUsuarioLabel.setText("Código Cliente");

        CodClienteInput.setEnabled(false);

        SelecionarClienteBotao.setText("Selecionar");
        SelecionarClienteBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecionarClienteBotaoActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(ListaProdutos);

        jLabel2.setText("Produtos Selecionados");

        SelecionarProdutoBotao.setText("Selecionar");
        SelecionarProdutoBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecionarProdutoBotaoActionPerformed(evt);
            }
        });

        NovaNotaBotao.setText("AdicionarNota");
        NovaNotaBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovaNotaBotaoActionPerformed(evt);
            }
        });

        LimparButton.setText("Limpar");
        LimparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Produtos Disponíveis");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Notas Anteriores");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Clientes");

        TBL_NotasAnteriores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDNota", "IDCliente", "QtTotal", "Subtotal", "Data venda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBL_NotasAnteriores.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(TBL_NotasAnteriores);
        if (TBL_NotasAnteriores.getColumnModel().getColumnCount() > 0) {
            TBL_NotasAnteriores.getColumnModel().getColumn(0).setResizable(false);
            TBL_NotasAnteriores.getColumnModel().getColumn(1).setResizable(false);
            TBL_NotasAnteriores.getColumnModel().getColumn(2).setResizable(false);
            TBL_NotasAnteriores.getColumnModel().getColumn(3).setResizable(false);
            TBL_NotasAnteriores.getColumnModel().getColumn(4).setResizable(false);
        }

        VerdetalhesBotao.setText("Ver detalhes");
        VerdetalhesBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerdetalhesBotaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(278, 427, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(NomeUsuarioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CodClienteInput, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SelecionarClienteBotao))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(SelecionarProdutoBotao)))
                                .addGap(0, 306, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NovaNotaBotao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LimparButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(VerdetalhesBotao)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(182, 182, 182))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NomeUsuarioLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodClienteInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelecionarClienteBotao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelecionarProdutoBotao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NovaNotaBotao)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LimparButton)
                        .addComponent(VerdetalhesBotao))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelecionarClienteBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecionarClienteBotaoActionPerformed
       if (TBL_Clientes.getSelectedRowCount() == 1) {
       int linha = TBL_Clientes.getSelectedRow();
       String cod = TBL_Clientes.getValueAt(linha, 0).toString();
       CodClienteInput.setText(cod);
       } else if (TBL_Clientes.getRowCount() == 0) {
           JOptionPane.showMessageDialog(this, "Tabela vazia.");
       } else {
           JOptionPane.showMessageDialog(this, "Por favor, selecione apenas uma linha para a operação.");
       }
    }//GEN-LAST:event_SelecionarClienteBotaoActionPerformed

    private void SelecionarProdutoBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecionarProdutoBotaoActionPerformed
        int[] linhasSelecionadas = TBL_Produtos.getSelectedRows();

        for (int i : linhasSelecionadas) {
            int codProduto = (int) tblProdutoModel.getValueAt(i, 0);
            String nomeProduto = tblProdutoModel.getValueAt(i, 1).toString();

            // pede a quantidade ao usuário
            String input = JOptionPane.showInputDialog(this, 
                    "Informe a quantidade para o produto: " + nomeProduto, "Quantidade", JOptionPane.PLAIN_MESSAGE);

            if (input != null && !input.trim().isEmpty()) {
                try {
                    int qtd = Integer.parseInt(input);

                    if (qtd > 0) {
                        // adiciona no JList mostrando produto + qtd
                        listaProdutosModel.addElement(codProduto + ";" + qtd);
                    } else {
                        JOptionPane.showMessageDialog(this, "Quantidade deve ser maior que 0.");
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Digite um número válido.");
                }
            }
        }
    }//GEN-LAST:event_SelecionarProdutoBotaoActionPerformed

    private void NovaNotaBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovaNotaBotaoActionPerformed
        NotaFiscal nf = new NotaFiscal();
        nf.setCodCliente(Integer.parseInt(CodClienteInput.getText()));

        for(int i = 0; i < listaProdutosModel.size(); i++){
            String[] dados = listaProdutosModel.get(i).split(";");
            int codProduto = Integer.parseInt(dados[0]);
            int qtd = Integer.parseInt(dados[1]);

            ProdutoNota pn = new ProdutoNota();
            Produto p = new ProdutoDAO().getProduto(codProduto);
            pn.setProduto(p);
            pn.setQtdVendida(qtd);
            nf.addItem(pn);
        }

        new NotaFiscalDAO().inserir(nf);
        limpar();
        carregarNotasFiscais();
    }//GEN-LAST:event_NovaNotaBotaoActionPerformed

    private void LimparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparButtonActionPerformed
        limpar();
    }//GEN-LAST:event_LimparButtonActionPerformed

    private void VerdetalhesBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerdetalhesBotaoActionPerformed
        int linhas = TBL_NotasAnteriores.getSelectedRowCount();
        if(linhas <= 0 || linhas > 1){
            JOptionPane.showMessageDialog(this, "Por favor, selecione apenas uma linha para a operação.");
            return;
        }
        int linha = TBL_NotasAnteriores.getSelectedRow();
        int codNota = Integer.parseInt(TBL_NotasAnteriores.getValueAt(linha, 0).toString());
        
        NotaFiscal nf = new NotaFiscalDAO().getNotaFiscal(codNota);
        new DetalhesNotaFiscal(nf).setVisible(true);
    }//GEN-LAST:event_VerdetalhesBotaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LancamentoNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LancamentoNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LancamentoNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LancamentoNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LancamentoNotaFiscal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CodClienteInput;
    private javax.swing.JButton LimparButton;
    private javax.swing.JList<String> ListaProdutos;
    private javax.swing.JLabel NomeUsuarioLabel;
    private javax.swing.JButton NovaNotaBotao;
    private javax.swing.JButton SelecionarClienteBotao;
    private javax.swing.JButton SelecionarProdutoBotao;
    private javax.swing.JTable TBL_Clientes;
    private javax.swing.JTable TBL_NotasAnteriores;
    private javax.swing.JTable TBL_Produtos;
    private javax.swing.JButton VerdetalhesBotao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
    public void carregarProdutos(){
        List<Produto> produtos = new ProdutoDAO().getProdutos();
        tblProdutoModel.setRowCount(0);
        for(Produto p : produtos){
            if(p.getQtdeEstoque() == 0) continue;
            tblProdutoModel.addRow(new Object[]{
                p.getCodProd(),
                p.getNome(),
                p.getPrecoVenda(),
                p.getDescricao(),
            });
        }   
    }
    
    public void carregarClientes(){
        List<Cliente> clientes = new ClienteDAO().getClientes();
        tblClienteModel.setRowCount(0);
        for(Cliente cl : clientes){
            tblClienteModel.addRow(new Object[]{
                cl.getCod(),
                cl.getNome(),
                cl.getEmail(),
                cl.getTelefone()
            });
        }
    }
    
    public void carregarNotasFiscais(){
        List<NotaFiscal> notasFiscais = new NotaFiscalDAO().getNotaFiscais();
        tblNotasAnterioresModel.setRowCount(0);
        for(NotaFiscal nf : notasFiscais){
            //TODO: Implementar condição de: 'nf.getStatus() != 'Cancelado'', para filtrar as notas fiscais
            tblNotasAnterioresModel.addRow(new Object[]{
                nf.getCodNota(),
                nf.getCodCliente(),
                nf.getQtdTotal(),
                nf.getSubTotal(),
                nf.getDataVenda(),
            });
        }
    }
    
    public void limpar(){
        CodClienteInput.setText("");
        listaProdutosModel.setSize(0);
    }

}
